#!/usr/bin/env python3
import sys
try:
    sys.path.insert(0, './src')
    from SQLite import SQLite as DB
    import Logger, Cmdline, Configuration, OSMDB
    from Help import helpAndExit as helpAndExit
except ImportError as e:
    print(str(e), file=sys.stderr)
    print('Cannot find the module(s) listed above. Exiting.', file=sys.stderr)
    sys.exit(1)

short_options = {'--update'    : '-u',
                 '--network'   : '-n',
                 '--list'      : '-l',
                 '--execute'   : '-e',
                 '--deploy'    : '-d',
                 '--selection' : '-s'}
cmdline = Cmdline.Cmdline(sys.argv, short_options)
configuration = Configuration.Configuration()
logger = Logger.Logger()
logger.log_time = True
db = DB(configuration.configuration,logger)
logger.setLogfile(configuration.configuration['log_file'])
osmdb = OSMDB.OSMDB(configuration.configuration, db, logger)

if cmdline.option('n') in [False,True]: cmdline.options['n'] = OSMDB.getDefaultRoute()
if cmdline.option('s') in [False]: cmdline.options['s'] = '*'

if cmdline.option('u') in ['host','hosts']:
    ping_delays = osmdb.pingHosts(cmdline.option('n'))
    osmdb.updateHosts(ping_delays,cmdline.option('n'))

if cmdline.option('s'):
    if cmdline.option('s') is True: helpAndExit('selection')
    hosts = osmdb.selectHosts(cmdline.option('s'))

if cmdline.option('e'):
    if cmdline.option('e') is True: helpAndExit('execute')
    osmdb.execOnHosts(cmdline.option('e'), hosts)


if cmdline.option('l') in ['host','hosts']:
    osmdb.listHosts(hosts)

elif cmdline.option('l') in ['update','updates']:
    osmdb.listHostUpdates()
    




# ~ osmdb.deploy(osmdb.ssh.pubkey(), 'root@ivanka')
